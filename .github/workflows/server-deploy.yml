name: Velog Server deployment workflow

on:
  push:
    branches: "release"
    paths:
      - "packages/velog-server/**"
      - "infrastructure/**"
      - "github/workflows/**"

env:
  AWS_REGION: ap-northeast-2
  ECR_REPOSITORY: velog-server

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: "./packages/velog-server"

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx for Docker Cache
        uses: docker/setup-buildx-action@v2.9.1
        with:
          install: true

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1.6.2

      - name: Build and push Docker images
        uses: docker/build-push-action@v4
        with:
          context: ./packages/velog-server/
          push: true
          tags: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

  pulumi:
    # needs: build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: "./infrastructure"

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Dependencies
        run: npm install

      - name: pulumi up
        uses: pulumi/actions@v4.4.0
        with:
          command: up #
          stack-name: winverse/velog/dev # or org-name/stack-name
          diff: true
          upsert: true
          work-dir: "./infrastructure"
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
